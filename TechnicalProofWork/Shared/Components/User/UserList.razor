<!-- UserList.razor -->

<div class="mb-4">
    <input type="text" @bind="searchTerm" placeholder="Search by name" class="px-2 py-1 bg-white bg-opacity-20 border border-transparent rounded-md focus:outline-none focus:ring-2 focus:ring-orange-600 text-white" />
</div>

<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-2 gap-4">
    @foreach (var user in GetFilteredUsers().Skip((currentPage - 1) * pageSize).Take(pageSize))
    {
        <UserCard User="user" SelectedUser="SelectedUser" OnUserSelected="OnUserSelected" UserTypes="UserTypes" />
    }
</div>

<div class="mt-4">
    <button @onclick="PreviousPage" disabled="@(currentPage == 1)" class="px-2 py-1 bg-gray-200 text-gray-700 rounded-md mr-2">Previous</button>
    <button @onclick="NextPage" disabled="@(currentPage == totalPages)" class="px-2 py-1 bg-gray-200 text-gray-700 rounded-md">Next</button>
</div>

@code {
    [Parameter]
    public List<UserModel> Users { get; set; }

    [Parameter]
    public UserModel SelectedUser { get; set; }

    [Parameter]
    public EventCallback<UserModel> OnUserSelected { get; set; }

    [Parameter]
    public List<UserTypeModel> UserTypes { get; set; }

    private int currentPage = 1;
    private int pageSize = 4;
    private string searchTerm = string.Empty;

    private List<UserModel> GetFilteredUsers()
    {
        if (string.IsNullOrWhiteSpace(searchTerm))
        {
            return Users;
        }
        else
        {
            return Users.Where(u => u.Name.Contains(searchTerm, StringComparison.OrdinalIgnoreCase)).ToList();
        }
    }

    private int totalPages => (int)Math.Ceiling(GetFilteredUsers().Count / (double)pageSize);

    private void PreviousPage()
    {
        if (currentPage > 1)
        {
            currentPage--;
        }
    }

    private void NextPage()
    {
        if (currentPage < totalPages)
        {
            currentPage++;
        }
    }
}